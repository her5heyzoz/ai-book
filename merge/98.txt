1 PyTorch简介
1.1 PyTorch的诞生
1.2 常见的深度学习框架简介
1.2.1 Theano
1.2.2 TensorFlow
1.2.3 Keras
1.2.4 Caffe/Caffe2
1.2.5 MXNet
1.2.6 CNTK
1.2.7 其他框架
1.3 属于动态图的未来
1.4 为什么选择PyTorch
1.5 星火燎原
1.6 fast.ai 放弃Keras+TensorFlow选择PyTorch
2 快速入门
2.1 安装与配置
2.1.1 安装PyTorch
2.1.2 学习环境配置
2.2 PyTorch入门第一步
2.2.1 Tensor
2.2.2 Autograd：自动微分
2.2.3 神经网络
2.2.4 小试牛刀：CIFAR-10分类
3 Tensor和autograd
3.1 Tensor
3.1.1 基础操作
3.1.2 Tensor和Numpy
3.1.3 内部结构
3.1.4 其他有关Tensor的话题
3.1.5 小试牛刀：线性回归
3.2 autograd
3.2.1 Variable
3.2.2 计算图
3.2.3 扩展autograd
3.2.4 小试牛刀：用Variable实现线性回归
4 神经网络工具箱nn
4.1 nn.Module
4.2 常用的神经网络层
4.2.1 图像相关层
4.2.2 激活函数
4.2.3 循环神经网络层
4.2.4 损失函数
4.3 优化器
4.4 nn.functional
4.5 初始化策略
4.6 nn.Module深入分析
4.7 nn和autograd的关系
4.8 小试牛刀：用50行代码搭建ResNet
5 PyTorch中常用的工具
5.1 数据处理
5.2 计算机视觉工具包：torchvision
5.3 可视化工具
5.3.1 Tensorboard
5.3.2 visdom
5.4 使用GPU加速：cuda
5.5 持久化
6 PyTorch实战指南
6.1 编程实战：猫和狗二分类
6.1.1 比赛介绍
6.1.2 文件组织架构
6.1.3 关于__init__.py
6.1.4 数据加载
6.1.5 模型定义
6.1.6 工具函数
6.1.7 配置文件
6.1.8 main.py
6.1.9 使用
6.1.10 争议
6.2 PyTorch Debug 指南
6.2.1 ipdb 介绍
6.2.2 在PyTorch中Debug
7 AI插画师：生成对抗网络
7.1 GAN的原理简介
7.2 用GAN生成动漫头像
7.3 实验结果分析
8 AI艺术家：神经网络风格迁移
8.1 风格迁移原理介绍
8.2 用PyTorch实现风格迁移
8.3 实验结果分析
9 AI诗人：用RNN写诗
9.1 自然语言处理的基础知识
9.1.1 词向量
9.1.2 RNN
9.2 CharRNN
9.3 用PyTorch实现CharRNN
9.4 实验结果分析
10 Image Caption：让神经网络看图讲故事
10.1 图像描述介绍
10.2 数据
10.2.1 数据介绍
10.2.2 图像数据处理
10.2.3 数据加载
10.3 模型与训练
10.4 实验结果分析
11 展望与未来
11.1 PyTorch的局限与发展
11.2 使用建议
・ ・ ・ ・ ・ ・ (收起)